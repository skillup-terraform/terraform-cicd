trigger:
- main

pool:
  name: default

stages:
  - stage: terraformIntPR
    displayName: 'terraform init'
    jobs:
      - job: terraform_init
        displayName: 'terraform init'
        condition: eq(variables['Build.Reason'], 'PullRequest')
        steps:
          - script: |
              terraform init

  - stage: terraformValidatePR
    displayName: 'terraform validate'
    jobs:
      - job: terraform_validate
        displayName: 'terraform validate'
        condition: eq(variables['Build.Reason'], 'PullRequest')
        steps:
          - script: |
              terraform validate

  - stage: terraformPlanPR
    displayName: 'terraform plan'
    jobs:
      - job: terraform_plan
        displayName: 'terraform plan'
        condition: eq(variables['Build.Reason'], 'PullRequest')
        steps:
          - script: |
              terraform plan

  - stage: terraformIntPush
    displayName: 'terraform init'
    jobs:
      - job: terraform_init
        displayName: 'terraform init'
        steps:
          - script: |
              terraform init
      - job: publishArtifcat
        steps:
          - task: PublishBuildArtifacts@1
            inputs:
              PathtoPublish: '$(Build.ArtifactStagingDirectory)'
              ArtifactName: 'drop'
              publishLocation: 'Container'

  - stage: terraformPlanPush
    displayName: 'terraform plan'
    jobs:
      - job: terraform_plan
        steps:
          - script: |
              terraform plan

  - stage: MergeRequest
    displayName: 'Merge Request'
    jobs:
      - job: terraform_apply
        displayName: 'terraform apply'
        steps:
          - script: echo "This step runs only when merging into main branch"
          - script: |
              terraform init
              terraform apply -auto-approve
          
      # - job: testJob
      #   displayName: 'TEST JOB'
      #   steps:
      #     - script: |
      #         terraform apply -auto-approve
      
